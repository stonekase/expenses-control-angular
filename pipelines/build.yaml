steps:
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/${_FIREBASE_PROJECT_ID}/firebase', './dockerfiles/firebase']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/${_FIREBASE_PROJECT_ID}/firebase']
  - name: 'node:20.0.0'
    entrypoint: 'npm'
    args: ['install']
  - name: 'node:20.0.0'
    entrypoint: 'npm'
    args: ['run', 'build']
  - name: gcr.io/project-id/firebase
    args: ['deploy', '--project=${_FIREBASE_PROJECT_ID}', '--only=hosting:${_FIREBASE_PROJECT_ID}']
  #- name: 'gcr.io/${_FIREBASE_PROJECT_ID}/firebase'
  #  args: ['use', '${_FIREBASE_PROJECT_ID}', '--token', '${_FIREBASE_TOKEN}']
  #- name: 'gcr.io/${_FIREBASE_PROJECT_ID}/firebase'
  #  args: ['target:apply', 'hosting', 'expenses-control-app-aacf3', 'expenses-control-app-aacf3', '--token', '${_FIREBASE_TOKEN}']
  #- name: 'gcr.io/${_FIREBASE_PROJECT_ID}/firebase'
  #  args: ['deploy', '--token', '${_FIREBASE_TOKEN}', '--only', 'hosting:expenses-control-app-aacf3']

images:
  - 'gcr.io/${_FIREBASE_PROJECT_ID}/firebase'

options:
  logging: CLOUD_LOGGING_ONLY


timeout: 1200s